@page "/NewProduct"
@page "/NewProduct/{id:int}"

@using Bakr.Data
@using Bakr.Endpoints
@using Bakr.Mapping
@using Bakr.Shared.Dtos
@using Bakr.Shared.Entities
@using Microsoft.AspNetCore.Http.HttpResults

@attribute [StreamRendering]
@attribute [Authorize(Policy = "AdminPolicy")]

@inject ApplicationDbContext dbContext
@inject NavigationManager NavigationManager

<PageTitle>@title</PageTitle>

<EditProduct Id="@Id" genres="@genres" productFromParent="@product" title="@title"/>

<br/>

@code {
    [Parameter]
    public int? Id {get; set;}
    private List<Genre>? genres;
    private ProductDetails? product;

    private string? title;

    protected override void OnParametersSet()
    {
        if (Id is null)
        {
            product = new ProductDetails
            {
                Name = string.Empty,
                Price = 0
            };
            title = "New Product";
        }
    }


    protected override async Task OnInitializedAsync() 
    {
        genres = (await GenresEndpoint.GetGenresAsync(dbContext)).Value;
        
        if(Id is not null)
        {
            var response = await ProductsEndpoint.GetProductAsync(Id.Value, dbContext);
            switch (response.Result) {
                case Ok<ProductDto> ok:
                    product = ok.Value?.ToDetails();
                    title = $"Edit {product?.Name}";
                    break;
                case NotFound:
                    NavigationManager.NavigateTo("/NotFound");
                    break;
                default:
                    NavigationManager.NavigateTo("/Error");
                    break;
            }
        }
    }
}
